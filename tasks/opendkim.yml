---
- name: Install OpenDKIM
  include_tasks: "{{ ansible_os_family }}.yml"

- name: Configure opendkim socket
  lineinfile: dest=/etc/default/opendkim regexp=^SOCKET= line='SOCKET="inet:{{ dkim_milter_port }}@localhost"'
  notify:
   - restart opendkim
  when: ansible_os_family == 'Debian'

- name: Create opendkim directory
  file:
    path: /etc/opendkim
    state: directory

- name: Create opendkim keys directory
  file:
    path: /etc/opendkim/keys
    state: directory
    owner: opendkim
    group: "{{ administrative_group }}"
    mode: '0750'

- name: Create private key domain directories
  file:
    state: directory
    path: "/etc/opendkim/keys/{{ item.name }}"
    owner: opendkim
    group: "{{ administrative_group }}"
    mode: '0750'
  loop: "{{ dkim_domains }}"
  loop_control:
    label: "{{ item.selector + '._domainkey.' + item.name }}"
- name: Copy Private Key(s)
  copy:
      ###### THE LINE BELOW {{ item.private_key }} IS INTENTIONALLY BLANK ####
      # If the content of `item.private_key` arrived here from the result of a
      # `lookup('file'/path/to/key)`, then the variable content won't have a
      # trailing newline, which poses a problem for private key files.
      # See https://github.com/ansible/ansible/issues/30829#issuecomment-331904024
      # TL;DR We need to ensure the resulting key file ends with a newline.
      ###### THE LINE BELOW {{ item.private_key }} IS INTENTIONALLY BLANK ####
      content: |
       {{ item.private_key }}

      ###### THE LINE ABOVE THIS ONE IS INTENTIONALLY BLANK ###################
      dest: '/etc/opendkim/keys/{{ item.name }}/{{ item.selector }}.private'
      mode: '0400'
      owner: opendkim
      group: opendkim
  when: item.private_key is defined
    and (item.private_key | trim) != ''
  loop: "{{ dkim_domains }}"
  loop_control:
    label: "{{ item.selector + '._domainkey.' + item.name }}"
  notify:
    - restart postfix
    - restart opendkim

- name: Generate Private Key(s)
  command: >
    opendkim-genkey
    --bits={{ dkim_generated_key_size }}
    --selector={{ item.selector }}
    --domain={{ item.name }}
    --append-domain
    --directory=/etc/opendkim/keys/{{ item.name }}
  args:
    creates: /etc/opendkim/keys/{{ item.name }}/{{ item.selector }}.private
  when: item.private_key is not defined
    or item.private_key == ''
  loop: "{{ dkim_domains }}"
  loop_control:
    label: "{{ item.selector + '._domainkey.' + item.name }}"
  register: opendkim_keys_generated
  notify:
    - restart postfix
    - restart opendkim

- name: Apply opendkim TrustedHosts config
  template:
    src: TrustedHosts.j2
    dest: /etc/opendkim/TrustedHosts
  notify:
   - restart opendkim

- name: Apply opendkim KeyTable config
  template:
    src: KeyTable.j2
    dest: /etc/opendkim/KeyTable
  notify:
   - restart opendkim

- name: Apply opendkim SigningTable config
  template:
    src: SigningTable.j2
    dest: /etc/opendkim/SigningTable
  notify:
   - restart opendkim

- name: Apply opendkim main config
  template:
    src: opendkim.conf.j2
    dest: /etc/opendkim.conf
  notify:
   - restart opendkim

- name: Enforce private key ownership
  file:
    path: /etc/opendkim/keys/{{ item.name }}/{{ item.selector }}.private
    owner: opendkim
    group: opendkim
  loop: "{{ dkim_domains }}"
  loop_control:
    label: "{{ item.selector + '._domainkey.' + item.name }}"

- name: Fix incomplete ubuntu18/systemd opendkim installation. See https://askubuntu.com/questions/1117330/opendkim-wont-start-cant-open-pid-file
# And also, https://serverfault.com/a/847442/41284
# Original issue: https://bugs.debian.org/cgi-bin/bugreport.cgi?archive=no&bug=861169
  shell: >
    /lib/opendkim/opendkim.service.generate && systemctl daemon-reload && service opendkim restart
  when: (dkim_apply_ubuntu_fix is defined) and (dkim_apply_ubuntu_fix == true) and (dkim_install_result is defined) and (dkim_install_result.changed)   #  Just send this on your command line as extra vars to fire it.

- name: Ensure opendkim service is enabled and running
  service:
    name: opendkim
    state: started
    enabled: yes
